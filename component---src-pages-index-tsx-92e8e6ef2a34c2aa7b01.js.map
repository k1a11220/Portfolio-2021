{"version":3,"sources":["webpack://gatsby-starter-default/./src/pages/index.tsx"],"names":["Title","styled","Container","props","theme","indexColor","search","location","data","edges","allMarkdownRemark","parsed","file","childImageSharp","fluid","queryString","selectedCategory","category","title","description","url","image","posts"],"mappings":"0NAUMA,EAAQC,OAAH,wOAaLC,EAAYD,SAAH,kDACO,SAACE,GAAD,OAAWA,EAAMC,MAAMC,cAgD7C,UA7BqD,YAQjD,IAPUC,EAOX,EAPDC,SAAYD,OAOX,IANDE,KACuBC,EAKtB,EALCC,kBAAqBD,MAMjBE,GADL,EAJCC,KACEC,gBAAmBC,MAIaC,QAAkBT,IAChDU,EACuB,iBAApBL,EAAOM,UAA0BN,EAAOM,SAE3CN,EAAOM,SADP,MAEN,OACE,QAAC,IAAD,CACEC,MAAM,cACNC,YAAY,6BACZC,IAAI,0BACJC,MAAM,QAEN,QAACnB,EAAD,MAEE,QAACF,EAAD,gBACA,QAAC,IAAD,CAAUgB,iBAAkBA,EAAkBM,MAAOb","file":"component---src-pages-index-tsx-92e8e6ef2a34c2aa7b01.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\nimport queryString, { ParsedQuery } from \"query-string\";\n\nimport Template from \"components/Common/Template\";\nimport Introduction from \"components/Main/Introduction\";\nimport PostList, { PostType } from \"components/Main/PostList\";\nimport { ProfileImageProps } from \"components/Main/ProfileImage\";\n\nconst Title = styled.p`\n  width: 1200px;\n  margin: 100px auto 0;\n  font-size: 28px;\n  font-weight: 700;\n  padding-top: 40px;\n  @media (max-width: 1400px) {\n    font-size: 20px;\n    width: 92%;\n    margin: 50px auto 0;\n  }\n`;\n\nconst Container = styled.div`\n  background-color: ${(props) => props.theme.indexColor};\n`;\n\ninterface IndexPageProps {\n  location: {\n    search: string;\n  };\n  data: {\n    allMarkdownRemark: {\n      edges: PostType[];\n    };\n    file: {\n      childImageSharp: {\n        fluid: ProfileImageProps[\"profileImage\"];\n      };\n    };\n  };\n}\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { fluid },\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search);\n  const selectedCategory: string =\n    typeof parsed.category !== \"string\" || !parsed.category\n      ? \"All\"\n      : parsed.category;\n  return (\n    <Template\n      title=\"Beomsoo-log\"\n      description=\"좋은 제품을 만들기 위한 고민을 적고 있습니다.\"\n      url=\"https://blog.beomsoo.me\"\n      image=\"img\"\n    >\n      <Container>\n        {/* <Introduction profileImage={fluid} /> */}\n        <Title>최근 게시글</Title>\n        <PostList selectedCategory={selectedCategory} posts={edges} />\n      </Container>\n    </Template>\n  );\n};\nexport default IndexPage;\nexport const getPostList = graphql`\n  query getPostList {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                fluid(\n                  maxWidth: 768\n                  maxHeight: 200\n                  fit: INSIDE\n                  quality: 100\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        fluid(maxWidth: 120, maxHeight: 120, fit: INSIDE, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}