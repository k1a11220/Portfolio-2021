{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"names":["SCategories","styled","SDate","Hr","PostHeadInfoWrapper","Title","props","theme","fontColor","title","date","categories","join","PostHeadWrapper","BackgroundImage","fluid","thumbnail","childImageSharp","alt","MarkdownRenderer","html","dangerouslySetInnerHTML","__html","Utterances","React","repo","containerRef","createRef","themeMode","darkModeVar","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","CommentWrapper","Comment","CommentWidget","data","allMarkdownRemark","edges","node","frontmatter","Template","description","summary","url","image"],"mappings":"uPASMA,EAAcC,SAAH,wMAWXC,GAAQD,QAAOD,EAAPC,CAAH,wNAYLE,EAAKF,QAAH,2HAQFG,EAAsBH,SAAH,4SAkBnBI,EAAQJ,SAAH,2UAUA,SAACK,GAAD,OAAWA,EAAMC,MAAMC,aAsBlC,EAf2D,YAIvD,IAHFC,EAGC,EAHDA,MACAC,EAEC,EAFDA,KACAC,EACC,EADDA,WAEA,OACE,QAACP,EAAD,MACE,QAACJ,EAAD,KAAcW,EAAWC,KAAK,SAC9B,QAACP,EAAD,KAAQI,IACR,QAACP,EAAD,eAAeQ,IACf,QAACP,EAAD,Q,UClEAU,EAAkBZ,SAAH,wJASfa,GAAkBb,SAAO,SAACK,GAAD,OAA2B,QAAC,IAAQA,KAA3CL,CAAH,6RAgCrB,EAhBmD,YAO/C,IANFQ,EAMC,EANDA,MACAC,EAKC,EALDA,KACAC,EAIC,EAJDA,WAEqBI,EAEpB,EAHDC,UACEC,gBAAmBF,MAGrB,OACE,QAACF,EAAD,MACE,QAAC,EAAD,CAAcJ,MAAOA,EAAOC,KAAMA,EAAMC,WAAYA,KACpD,QAACG,EAAD,CAAiBC,MAAOA,EAAOG,IAAI,gBChDnCC,EAAmBlB,SAAH,k6FA0CT,SAACK,GAAD,OAAWA,EAAMC,MAAMC,aAOvB,SAACF,GAAD,OAAWA,EAAMC,MAAMC,aAmCP,SAACF,GAAD,OAAWA,EAAMC,MAAMC,aAsHpD,EAJyD,YAAqB,IAATY,EAAQ,EAARA,KACnE,OAAO,QAACD,EAAD,CAAkBE,wBAAyB,CAAEC,OAAQF,M,UClMxDG,EAAyCC,QAAW,YAAsB,IAAnBC,EAAkB,EAAlBA,KACrDC,GADuE,EAAZnB,OAC5CoB,kBACfC,GAA8B,KAAlBC,UAVA,eACD,cA+BjB,OApBAC,sBAAgB,WACd,IAAMC,EAAaC,SAASC,cAAc,UAEpCC,EAAa,CACjBC,IAjBM,gCAkBNV,OACAlB,MAAOqB,EACP,aAAc,WACdQ,MAAO,iBACPC,YAAa,YACbC,MAAO,QAGTC,OAAOC,QAAQN,GAAYO,SAAQ,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACnDZ,EAAWa,aAAaF,EAAKC,MAG/BjB,EAAamB,QAASC,YAAYf,KACjC,CAACN,KAEG,eAAKsB,IAAKrB,OAGnBH,EAAWyB,YAAc,aAEzB,I,IAAA,ICRMC,EAAiBhD,SAAH,qHAQdiD,GAAUjD,QAAOkD,EAAPlD,CAAH,gEA+Bb,EAzB2D,YAIvD,IACF,EADC,EAHDmD,KACEC,kBAAqBC,MAKb,GADRC,KAAQnC,EADV,EACUA,KAAMoC,EADhB,EACgBA,YAGhB,OACE,QAACC,EAAA,EAAD,CACEhD,MAAO,IAAI+C,EAAY7C,WAAhB,KAAiC6C,EAAY/C,MAAQ,UAC5DiD,YAAaF,EAAYG,QACzBC,IAAI,GACJC,MAAM,KAEN,QAAC,EAAaL,IACd,QAAC,EAAD,CAAapC,KAAMA,KAEnB,QAAC6B,EAAD,MACE,QAACC,EAAD,CAASzB,KAAK","file":"component---src-templates-post-template-tsx-7ac79d9df43b6fd547b1.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nexport interface PostHeadInfoProps {\n  title: string;\n  date: string;\n  categories: string[];\n}\n\nconst SCategories = styled.div`\n  color: #086bce;\n  font-weight: 600;\n  font-size: 1.125rem;\n  margin-bottom: 1.125rem;\n  @media (max-width: 768px) {\n    font-size: 1rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst SDate = styled(SCategories)`\n  color: #a1a1a1;\n  font-weight: 700;\n  margin-top: 1.125rem;\n  margin-bottom: 0px;\n  @media (max-width: 768px) {\n    font-size: 1rem;\n    margin-top: 1rem;\n    margin-bottom: 0;\n  }\n`;\n\nconst Hr = styled.hr`\n  margin-top: 60px;\n  color: #4e5968;\n  @media (max-width: 768px) {\n    margin-top: 40px;\n  }\n`;\n\nconst PostHeadInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 700px;\n  height: 100%;\n  margin: 0 auto;\n  padding: 60px 0;\n  color: #ffffff;\n  position: relative;\n  top: 64px;\n  margin-bottom: 64px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 40px 0;\n  }\n`;\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 3rem;\n  font-weight: 700;\n  color: ${(props) => props.theme.fontColor};\n\n  @media (max-width: 768px) {\n    font-size: 1.875rem;\n  }\n`;\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n  categories,\n}) {\n  return (\n    <PostHeadInfoWrapper>\n      <SCategories>{categories.join(\" / \")}</SCategories>\n      <Title>{title}</Title>\n      <SDate>업데이트 : {date}</SDate>\n      <Hr />\n    </PostHeadInfoWrapper>\n  );\n};\n\nexport default PostHeadInfo;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport PostHeadInfo, { PostHeadInfoProps } from \"components/Post/PostHeadInfo\";\nimport Img, { FluidObject } from \"gatsby-image\";\n\ntype GatsbyImgProps = {\n  fluid: FluidObject;\n  alt: string;\n  className?: string;\n};\n\nexport interface PostHeadProps extends PostHeadInfoProps {\n  thumbnail: {\n    childImageSharp: {\n      fluid: FluidObject;\n    };\n  };\n}\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  @media screen and (max-width: 768px) {\n    width: 92%;\n    align-self: center;\n  }\n`;\n\nconst BackgroundImage = styled((props: GatsbyImgProps) => <Img {...props} />)`\n  width: 700px;\n  height: 400px;\n  object-fit: cover;\n  margin: 0 auto;\n  margin-bottom: 60px;\n  object-position: center center;\n  border-radius: 10px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 240px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  categories,\n  thumbnail: {\n    childImageSharp: { fluid },\n  },\n}) {\n  return (\n    <PostHeadWrapper>\n      <PostHeadInfo title={title} date={date} categories={categories} />\n      <BackgroundImage fluid={fluid} alt=\"thumbnail\" />\n    </PostHeadWrapper>\n  );\n};\n\nexport default PostHead;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\ninterface PostContentProps {\n  html: string;\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 700px;\n  margin: 0 auto;\n  word-break: break-all;\n\n  // Markdown Style\n  line-height: 1.8125;\n  letter-spacing: -0.02rem;\n  /* word-break: keep-all; */\n  font-weight: 300;\n\n  * {\n    font-size: 1.125rem;\n\n    @media (max-width: 768px) {\n      font-size: 1rem;\n    }\n  }\n  // Adjust Heading Element Style\n\n  p {\n    margin-bottom: 1.5rem; //24ㅔㅌ\n  }\n\n  h1 {\n    font-size: 3rem; //48px\n  }\n\n  h2 {\n    font-size: 1.625rem; //26px\n    margin: 36px 0 32px 0;\n  }\n\n  h3 {\n    font-size: 1.375rem; //22px\n    margin: 20px 0px 20px 0px;\n  }\n\n  strong {\n    color: ${(props) => props.theme.fontColor};\n    font-weight: 600;\n  }\n\n  h1,\n  h2,\n  h3 {\n    color: ${(props) => props.theme.fontColor};\n    font-weight: 600;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n    padding-top: 0;\n  }\n\n  /* * + h1,\n  * + h2,\n  * + h3 {\n    padding-top: 0;\n  } */\n\n  & > h2:first-child {\n    margin-top: 0;\n    padding-top: 0;\n  }\n\n  & > h3:first-child {\n    margin-top: 0;\n    padding-top: 0;\n  }\n\n  img {\n    border-radius: 10px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin-bottom: 1.5rem;\n    padding: 5px 15px;\n    border-left: 2px solid ${(props) => props.theme.fontColor};\n    font-weight: 800;\n  }\n\n  blockquote p {\n    margin-bottom: 0;\n  }\n\n  // Adjust List Element Style\n\n  li p,\n  strong {\n    margin: 0;\n  }\n\n  ol,\n  ul {\n    margin-left: 1.25rem;\n    margin-bottom: 1.5rem;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    margin: 1.375rem 0 2.5rem;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  code,\n  pre {\n    max-width: 92vw;\n    font-weight: 300;\n  }\n\n  pre {\n    margin-bottom: 1.5rem;\n  }\n\n  code * {\n    /* font-family: D2 coding; */\n    /* font-family: SF Mono Light; */\n    /* font-family: \"Roboto Mono\", monospace; */\n    /* font-family: \"Ubuntu\", sans-serif; */\n    font-family: \"Oxygen Mono\", monospace;\n  }\n\n  code {\n    padding: 1px 3px;\n    -webkit-border-radius: 10px;\n    -moz-border-radius: 10px;\n    border-radius: 10px;\n  }\n\n  pre {\n    background-color: #282a36;\n  }\n  pre code {\n    font-size: 0.75rem;\n    padding: 0;\n    background: transparent;\n  }\n\n  code > .parameter {\n    color: #fff;\n  }\n  sup {\n    font-size: 0.75rem;\n    vertical-align: super;\n    line-height: 0;\n  }\n\n  td,\n  th {\n    border-bottom: 1px solid var(--color-gray-3);\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 92%;\n    line-height: 1.6;\n    font-size: 0.875rem;\n\n    p {\n      margin-bottom: 1.25rem;\n    }\n\n    h1 {\n      font-size: 1.5rem;\n    }\n\n    h2 {\n      font-size: 1.25rem;\n      margin: 28px 0 12px 0px;\n    }\n\n    h3 {\n      font-size: 1.125rem;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`;\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nexport default PostContent;\n","import React, { createRef, useLayoutEffect } from \"react\";\nimport { darkModeVar } from \"hooks/useTheme\";\n\nconst src = \"https://utteranc.es/client.js\";\nconst LIGHT_THEME = \"github-light\";\nconst DARK_THEME = \"github-dark\";\n\nexport interface IUtterancesProps {\n  repo: string;\n  theme: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo, theme }) => {\n  const containerRef = createRef<HTMLDivElement>();\n  const themeMode = darkModeVar() === false ? LIGHT_THEME : DARK_THEME;\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement(\"script\");\n\n    const attributes = {\n      src,\n      repo,\n      theme: themeMode,\n      \"issue-term\": \"pathname\",\n      label: \"✨💬 comments ✨\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    containerRef.current!.appendChild(utterances);\n  }, [repo]);\n\n  return <div ref={containerRef} />;\n});\n\nUtterances.displayName = \"Utterances\";\n\nexport default Utterances;\n","import React, { FunctionComponent } from \"react\";\nimport { graphql } from \"gatsby\";\nimport Template from \"components/Common/Template\";\nimport PostHead, { PostHeadProps } from \"components/Post/PostHead\";\nimport PostContent from \"components/Post/PostContent\";\nimport CommentWidget from \"components/Post/CommentWidget\";\nimport Share from \"components/Post/Share\";\nimport styled from \"styled-components\";\n\ninterface PostTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: {\n            html: string;\n            frontmatter: PostHeadProps & {\n              summary: string;\n              title: string;\n              path: string;\n            };\n          };\n          previous: {\n            frontmatter: {\n              title: string;\n            };\n          };\n        }\n      ];\n    };\n  };\n}\n\nconst CommentWrapper = styled.div`\n  width: 708px;\n  align-self: center;\n  @media (max-width: 768px) {\n    width: 92%;\n  }\n`;\n\nconst Comment = styled(CommentWidget)`\n  & > iframe {\n    width: 100px;\n  }\n`;\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) {\n  const {\n    node: { html, frontmatter },\n  } = edges[0];\n\n  return (\n    <Template\n      title={`[${frontmatter.categories}] ` + frontmatter.title + \"- B-log\"}\n      description={frontmatter.summary}\n      url=\"\"\n      image=\"\"\n    >\n      <PostHead {...frontmatter} />\n      <PostContent html={html} />\n      {/* <Share prev={frontmatter.title} next=\"ageasda\" /> */}\n      <CommentWrapper>\n        <Comment repo=\"k1a11220/blog\" />\n      </CommentWrapper>\n    </Template>\n  );\n};\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                fluid(fit: INSIDE, quality: 100) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}