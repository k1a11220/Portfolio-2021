{"expireTime":9007200882396916000,"key":"transformer-remark-markdown-html-ast-802f10ef34ad3b8f9d6c6165ab42b64c-gatsby-remark-vscode-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"javascript에서의 map","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":21,"offset":21}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":21,"offset":21}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"MDN에 나와있는 설명입니다.","position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":17,"offset":39}}}],"position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":17,"offset":39}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"map() 메서드는 배열 내의 모든 요소 각각에 대하여 주어진 함수를 호출한 결과를 모아 새로운 배열을 반환합니다.","position":{"start":{"line":6,"column":3,"offset":43},"end":{"line":6,"column":67,"offset":107}}}],"position":{"start":{"line":6,"column":3,"offset":43},"end":{"line":6,"column":67,"offset":107}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":41},"end":{"line":6,"column":67,"offset":107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"설명만으로는 이해하기 힘들 수 있기 때문에 샘플코드와 함께 살펴보겠습니다.","position":{"start":{"line":8,"column":1,"offset":109},"end":{"line":8,"column":42,"offset":150}}}],"position":{"start":{"line":8,"column":1,"offset":109},"end":{"line":8,"column":42,"offset":150}}},{"type":"text","value":"\n"},{"type":"raw","value":"<pre class=\"grvsc-container monokai-dimmed\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">array1</span><span class=\"mtk1\"> </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> [</span><span class=\"mtk3\">1</span><span class=\"mtk1\">, </span><span class=\"mtk3\">4</span><span class=\"mtk1\">, </span><span class=\"mtk3\">9</span><span class=\"mtk1\">, </span><span class=\"mtk3\">16</span><span class=\"mtk1\">];</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">// pass a function to map</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">map1</span><span class=\"mtk1\"> </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">array1</span><span class=\"mtk1\">.</span><span class=\"mtk10\">map</span><span class=\"mtk1\">((</span><span class=\"mtk3\">x</span><span class=\"mtk1\">) </span><span class=\"mtk11\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">x</span><span class=\"mtk1\"> </span><span class=\"mtk15\">*</span><span class=\"mtk1\"> </span><span class=\"mtk3\">2</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk13\">console</span><span class=\"mtk1\">.</span><span class=\"mtk11\">log</span><span class=\"mtk1\">(</span><span class=\"mtk3\">map1</span><span class=\"mtk1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk4\">// expected output: Array [2, 8, 18, 32]</span></span></span></code></pre>","position":{"start":{"line":10,"column":1,"offset":152},"end":{"line":18,"column":4,"offset":318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"쉽게 말하면 모든 배열의 값(array1 -> [1, 4, 9, 16]에 특정 함수((x) => x * 2))를 실행한다고 생각하시면 됩니다.","position":{"start":{"line":20,"column":1,"offset":320},"end":{"line":20,"column":81,"offset":400}}}],"position":{"start":{"line":20,"column":1,"offset":320},"end":{"line":20,"column":81,"offset":400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"직접 만들면서 익혀보도록 하겠습니다.","position":{"start":{"line":22,"column":1,"offset":402},"end":{"line":22,"column":21,"offset":422}}}],"position":{"start":{"line":22,"column":1,"offset":402},"end":{"line":22,"column":21,"offset":422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"데이터 걸러내기","position":{"start":{"line":24,"column":4,"offset":427},"end":{"line":24,"column":12,"offset":435}}}],"position":{"start":{"line":24,"column":1,"offset":424},"end":{"line":24,"column":12,"offset":435}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"저번에 ResultCard들 만들어 API 데이터를 다루기로 했습니다. 먼저, 반환되는 데이터를 살펴봅시다.","position":{"start":{"line":26,"column":1,"offset":437},"end":{"line":26,"column":61,"offset":497}}}],"position":{"start":{"line":26,"column":1,"offset":437},"end":{"line":26,"column":61,"offset":497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"./console-1.png","alt":"console"},"children":[],"position":{"start":{"line":28,"column":1,"offset":499},"end":{"line":28,"column":28,"offset":526}}}],"position":{"start":{"line":28,"column":1,"offset":499},"end":{"line":28,"column":28,"offset":526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"0~3번, 마지막 배열은 API의 정보를 담고있는 데이터기 때문에 servList만 걸러내야 합니다. slice 함수를 통해 배열을 정제한 뒤 hook을 사용해 만들 배열에 JSON을 넣겠습니다.","position":{"start":{"line":30,"column":1,"offset":528},"end":{"line":30,"column":110,"offset":637}}}],"position":{"start":{"line":30,"column":1,"offset":528},"end":{"line":30,"column":110,"offset":637}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Home.js","position":{"start":{"line":32,"column":1,"offset":639},"end":{"line":32,"column":8,"offset":646}}}],"position":{"start":{"line":32,"column":1,"offset":639},"end":{"line":32,"column":8,"offset":646}}},{"type":"text","value":"\n"},{"type":"raw","value":"<pre class=\"grvsc-container monokai-dimmed\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">let</span><span class=\"mtk1\"> </span><span class=\"mtk3\">resultNumber</span><span class=\"mtk1\"> </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">4</span><span class=\"mtk1\">; </span><span class=\"mtk4\">//필요없는 최상위 3개의 데이터</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">const</span><span class=\"mtk1\"> [</span><span class=\"mtk3\">state</span><span class=\"mtk1\">, </span><span class=\"mtk3\">setState</span><span class=\"mtk1\">] </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk10\">useState</span><span class=\"mtk1\">({</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  results: [],</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}); </span><span class=\"mtk4\">//api 데이터를 담는 hooks</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">async</span><span class=\"mtk1\"> </span><span class=\"mtk11\">function</span><span class=\"mtk1\"> </span><span class=\"mtk10\">parseStr</span><span class=\"mtk1\">(</span><span class=\"mtk3\">dataSet</span><span class=\"mtk1\">) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">dataArr</span><span class=\"mtk1\"> </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk15\">new</span><span class=\"mtk1\"> </span><span class=\"mtk9\">XMLParser</span><span class=\"mtk1\">().</span><span class=\"mtk10\">parseFromString</span><span class=\"mtk1\">(</span><span class=\"mtk3\">dataSet</span><span class=\"mtk1\">).</span><span class=\"mtk11\">children</span><span class=\"mtk1\">; </span><span class=\"mtk4\">// xml을 json으로 변경</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\">resultCount</span><span class=\"mtk1\"> </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">dataArr</span><span class=\"mtk1\">.</span><span class=\"mtk13\">length</span><span class=\"mtk1\">; </span><span class=\"mtk4\">// dataArr의 길이</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk10\">setState</span><span class=\"mtk1\">((</span><span class=\"mtk3\">preState</span><span class=\"mtk1\">) </span><span class=\"mtk11\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">return</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk15\">...</span><span class=\"mtk3\">preState</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      results: </span><span class=\"mtk3\">dataArr</span><span class=\"mtk1\">.</span><span class=\"mtk10\">slice</span><span class=\"mtk1\">(</span><span class=\"mtk3\">resultNumber</span><span class=\"mtk1\">, </span><span class=\"mtk3\">resultCount</span><span class=\"mtk1\"> </span><span class=\"mtk15\">-</span><span class=\"mtk1\"> </span><span class=\"mtk3\">1</span><span class=\"mtk1\">), </span><span class=\"mtk4\">//4번째부터 마지막 1개를 제외한 배열을 만든다.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    };</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  });</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>","position":{"start":{"line":34,"column":1,"offset":648},"end":{"line":51,"column":4,"offset":1109}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"정상적으로 원하는 데이터만 출력되는 것을 확인할 수 있습니다.\n","position":{"start":{"line":53,"column":1,"offset":1111},"end":{"line":54,"column":1,"offset":1146}}},{"type":"element","tagName":"img","properties":{"src":"/assets/2021-04-13-bokdda-7/console-2.png","alt":"console-2"},"children":[],"position":{"start":{"line":54,"column":1,"offset":1146},"end":{"line":54,"column":56,"offset":1201}}}],"position":{"start":{"line":53,"column":1,"offset":1111},"end":{"line":54,"column":56,"offset":1201}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"ResultList 함수 만들기","position":{"start":{"line":56,"column":4,"offset":1206},"end":{"line":56,"column":21,"offset":1223}}}],"position":{"start":{"line":56,"column":1,"offset":1203},"end":{"line":56,"column":21,"offset":1223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이젠 ResultCard를 map 함수를 통해 생성하는 ResultList 컴포넌트를 만들겠습니다.","position":{"start":{"line":58,"column":1,"offset":1225},"end":{"line":58,"column":56,"offset":1280}}}],"position":{"start":{"line":58,"column":1,"offset":1225},"end":{"line":58,"column":56,"offset":1280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"JSON 타입의 API 데이터를 result라는 인자로 받아 map 함수를 통해 ResultCard를 생성합니다.","position":{"start":{"line":60,"column":1,"offset":1282},"end":{"line":60,"column":64,"offset":1345}}}],"position":{"start":{"line":60,"column":1,"offset":1282},"end":{"line":60,"column":64,"offset":1345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이때 데이터를 살펴보면, 우리가 필요한 정보는 n/children/n/value 라는 것을 알 수 있습니다. (n은 숫자를 의미 0, 1, 2, 3, ...)\n따라서 ResultCard에 필요한 데이터를 입력해주면 됩니다.\n","position":{"start":{"line":62,"column":1,"offset":1347},"end":{"line":64,"column":1,"offset":1472}}},{"type":"element","tagName":"img","properties":{"src":"/assets/2021-04-13-bokdda-7/console-3.png","alt":"console-3"},"children":[],"position":{"start":{"line":64,"column":1,"offset":1472},"end":{"line":64,"column":56,"offset":1527}}}],"position":{"start":{"line":62,"column":1,"offset":1347},"end":{"line":64,"column":56,"offset":1527}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ResultList.js","position":{"start":{"line":66,"column":1,"offset":1529},"end":{"line":66,"column":14,"offset":1542}}}],"position":{"start":{"line":66,"column":1,"offset":1529},"end":{"line":66,"column":14,"offset":1542}}},{"type":"text","value":"\n"},{"type":"raw","value":"<pre class=\"grvsc-container monokai-dimmed\" data-language=\"js\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">import</span><span class=\"mtk1\"> </span><span class=\"mtk3\">React</span><span class=\"mtk1\"> </span><span class=\"mtk11\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;react&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">import</span><span class=\"mtk1\"> </span><span class=\"mtk3\">ResultCard</span><span class=\"mtk1\"> </span><span class=\"mtk11\">from</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&quot;./ResultCard&quot;</span><span class=\"mtk1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">const</span><span class=\"mtk1\"> </span><span class=\"mtk10\">ResultList</span><span class=\"mtk1\"> </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> (</span><span class=\"mtk3\">results</span><span class=\"mtk1\">) </span><span class=\"mtk11\">=&gt;</span><span class=\"mtk1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk11\">return</span><span class=\"mtk1\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk3\">&lt;section</span><span class=\"mtk12\"> className</span><span class=\"mtk15\">=</span><span class=\"mtk12\">&quot;</span><span class=\"mtk8\">result-container</span><span class=\"mtk12\">&quot;</span><span class=\"mtk3\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">      </span><span class=\"mtk3\">&lt;div&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">        </span><span class=\"mtk25\">{</span><span class=\"mtk3\">results</span><span class=\"mtk25\">.</span><span class=\"mtk3\">results</span><span class=\"mtk25\">.</span><span class=\"mtk10\">map</span><span class=\"mtk25\">((</span><span class=\"mtk3\">post</span><span class=\"mtk25\">) </span><span class=\"mtk11\">=&gt;</span><span class=\"mtk25\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk25\">          </span><span class=\"mtk11\">return</span><span class=\"mtk25\"> (</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk25\">            </span><span class=\"mtk3\">&lt;</span><span class=\"mtk13\">ResultCard</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">              key</span><span class=\"mtk15\">=</span><span class=\"mtk25\">{</span><span class=\"mtk3\">post</span><span class=\"mtk25\">.</span><span class=\"mtk11\">children</span><span class=\"mtk25\">[</span><span class=\"mtk3\">0</span><span class=\"mtk25\">].</span><span class=\"mtk11\">value</span><span class=\"mtk25\">}</span><span class=\"mtk12\"> </span><span class=\"mtk4\">// key는 inqNum 고유번호로 지정함.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">              title</span><span class=\"mtk15\">=</span><span class=\"mtk25\">{</span><span class=\"mtk3\">post</span><span class=\"mtk25\">.</span><span class=\"mtk11\">children</span><span class=\"mtk25\">[</span><span class=\"mtk3\">6</span><span class=\"mtk25\">].</span><span class=\"mtk11\">value</span><span class=\"mtk25\">}</span><span class=\"mtk12\"> </span><span class=\"mtk4\">// 제목: servNm</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">              ministry</span><span class=\"mtk15\">=</span><span class=\"mtk25\">{</span><span class=\"mtk3\">post</span><span class=\"mtk25\">.</span><span class=\"mtk11\">children</span><span class=\"mtk25\">[</span><span class=\"mtk3\">1</span><span class=\"mtk25\">].</span><span class=\"mtk11\">value</span><span class=\"mtk25\">}</span><span class=\"mtk12\"> </span><span class=\"mtk4\">// 기관: jurMnofNm</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">              details</span><span class=\"mtk15\">=</span><span class=\"mtk25\">{</span><span class=\"mtk3\">post</span><span class=\"mtk25\">.</span><span class=\"mtk11\">children</span><span class=\"mtk25\">[</span><span class=\"mtk3\">3</span><span class=\"mtk25\">].</span><span class=\"mtk11\">value</span><span class=\"mtk25\">}</span><span class=\"mtk12\"> </span><span class=\"mtk4\">// 설명: servDgst</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">            </span><span class=\"mtk3\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk25\">          );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk25\">        })}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">      </span><span class=\"mtk3\">&lt;/div&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk12\">    </span><span class=\"mtk3\">&lt;/section&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  );</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">};</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">export</span><span class=\"mtk1\"> </span><span class=\"mtk11\">default</span><span class=\"mtk1\"> </span><span class=\"mtk3\">ResultList</span><span class=\"mtk1\">;</span></span></span></code></pre>","position":{"start":{"line":68,"column":1,"offset":1544},"end":{"line":92,"column":4,"offset":2164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"ResultList 불러오기","position":{"start":{"line":94,"column":4,"offset":2169},"end":{"line":94,"column":19,"offset":2184}}}],"position":{"start":{"line":94,"column":1,"offset":2166},"end":{"line":94,"column":19,"offset":2184}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Home에서 ResultList를 불러옵니다.","position":{"start":{"line":96,"column":1,"offset":2186},"end":{"line":96,"column":26,"offset":2211}}}],"position":{"start":{"line":96,"column":1,"offset":2186},"end":{"line":96,"column":26,"offset":2211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Home.js","position":{"start":{"line":98,"column":1,"offset":2213},"end":{"line":98,"column":8,"offset":2220}}}],"position":{"start":{"line":98,"column":1,"offset":2213},"end":{"line":98,"column":8,"offset":2220}}},{"type":"text","value":"\n"},{"type":"raw","value":"<pre class=\"grvsc-container monokai-dimmed\" data-language=\"js\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\">&lt;</span><span class=\"mtk13\">ResultList</span><span class=\"mtk12\"> results</span><span class=\"mtk15\">=</span><span class=\"mtk25\">{</span><span class=\"mtk3\">state</span><span class=\"mtk25\">.</span><span class=\"mtk11\">results</span><span class=\"mtk25\">}</span><span class=\"mtk12\"> </span><span class=\"mtk3\">/&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk15\">...</span></span></span></code></pre>","position":{"start":{"line":100,"column":1,"offset":2222},"end":{"line":104,"column":4,"offset":2278}}},{"type":"text","value":"\n"},{"type":"raw","value":"<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai-dimmed {\n    background-color: #1e1e1e;\n    color: #c5c8c6;\n  }\n  .monokai-dimmed .mtk11 { color: #9872A2; }\n  .monokai-dimmed .mtk1 { color: #C5C8C6FF; }\n  .monokai-dimmed .mtk3 { color: #6089B4; }\n  .monokai-dimmed .mtk15 { color: #676867; }\n  .monokai-dimmed .mtk4 { color: #9A9B99; }\n  .monokai-dimmed .mtk10 { color: #CE6700; }\n  .monokai-dimmed .mtk13 { color: #C7444A; }\n  .monokai-dimmed .mtk9 { color: #9B0000; }\n  .monokai-dimmed .mtk8 { color: #9AA83A; }\n  .monokai-dimmed .mtk12 { color: #D0B344; }\n  .monokai-dimmed .mtk25 { color: #C5C8C6; }\n  .monokai-dimmed .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>"}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":105,"column":1,"offset":2279}}}}