{"version":3,"file":"component---src-pages-index-tsx-87b43651e860be88e410.js","mappings":"6MAYMA,EAAYC,EAAAA,GAAAA,IAAH,sDA6Ef,UAzDqD,YAQjD,IAPUC,EAOX,EAPDC,SAAYD,OAOX,IANDE,KACuBC,EAKtB,EALCC,kBAAqBD,MAEAE,EAGtB,EAJCC,KACEC,gBAAmBF,MAIjBG,EAA8BC,EAAAA,MAAkBT,GAChDU,EACuB,iBAApBF,EAAOG,UAA0BH,EAAOG,SAE3CH,EAAOG,SADP,MAGAC,GAAeC,EAAAA,EAAAA,UACnB,kBACEV,EAAMW,QACJ,SACEC,EADF,GAeE,OARG,EAJDC,KACEC,YAAeC,WAIRC,SAAQ,SAACR,QACKS,IAAnBL,EAAKJ,GAAyBI,EAAKJ,GAAY,EAC9CI,EAAKJ,QAGZI,EAAI,MAEGA,IAET,CAAEM,IAAK,MAEX,IAEF,OACE,gBAAC,IAAD,CACEC,MAAM,cACNC,YAAY,6BACZC,IAAI,0BACJC,MAAM,OAEN,gBAAC3B,EAAD,KACE,gBAAC,IAAD,CAAc4B,aAAcrB,IAC5B,gBAAC,IAAD,CACEK,iBAAkBA,EAClBE,aAAcA,IAEhB,gBAAC,IAAD,CAAUF,iBAAkBA,EAAkBiB,MAAOxB","sources":["webpack://works-beomsoo/./src/pages/index.tsx"],"sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\nimport queryString, { ParsedQuery } from \"query-string\";\n\nimport Template from \"components/Common/Template\";\nimport Introduction from \"components/Main/Introduction\";\nimport PostList, { PostType } from \"components/Main/PostList\";\nimport { ProfileImageProps } from \"components/Main/ProfileImage\";\nimport { useMemo } from \"react\";\nimport CategoryList from \"components/Main/CategoryList\";\n\nconst Container = styled.div`\n  background-color: #ffffff;\n`;\n\ninterface IndexPageProps {\n  location: {\n    search: string;\n  };\n  data: {\n    allMarkdownRemark: {\n      edges: PostType[];\n    };\n    file: {\n      childImageSharp: {\n        fluid: ProfileImageProps[\"profileImage\"];\n      };\n    };\n  };\n}\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { fluid },\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search);\n  const selectedCategory: string =\n    typeof parsed.category !== \"string\" || !parsed.category\n      ? \"All\"\n      : parsed.category;\n\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps[\"categoryList\"],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostType\n        ) => {\n          categories.forEach((category) => {\n            if (list[category] === undefined) list[category] = 1;\n            else list[category]++;\n          });\n\n          list[\"All\"]++;\n\n          return list;\n        },\n        { All: 0 }\n      ),\n    []\n  );\n  return (\n    <Template\n      title=\"Beomsoo-log\"\n      description=\"좋은 제품을 만들기 위한 고민을 적고 있습니다.\"\n      url=\"https://blog.beomsoo.me\"\n      image=\"img\"\n    >\n      <Container>\n        <Introduction profileImage={fluid} />\n        <CategoryList\n          selectedCategory={selectedCategory}\n          categoryList={categoryList}\n        />\n        <PostList selectedCategory={selectedCategory} posts={edges} />\n      </Container>\n    </Template>\n  );\n};\nexport default IndexPage;\nexport const getPostList = graphql`\n  query getPostList {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            client\n            date(formatString: \"YYYY\")\n            categories\n            thumbnail {\n              childImageSharp {\n                fluid(\n                  maxWidth: 2160\n                  maxHeight: 1440\n                  fit: INSIDE\n                  quality: 100\n                ) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        fluid(maxWidth: 120, maxHeight: 120, fit: INSIDE, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n  }\n`;\n"],"names":["Container","styled","search","location","data","edges","allMarkdownRemark","fluid","file","childImageSharp","parsed","queryString","selectedCategory","category","categoryList","useMemo","reduce","list","node","frontmatter","categories","forEach","undefined","All","title","description","url","image","profileImage","posts"],"sourceRoot":""}