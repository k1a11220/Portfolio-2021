{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Common/Theme.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHeadInfo.tsx","webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/components/Post/CommentWidget.tsx","webpack://gatsby-starter-default/./src/components/Post/Arrow.tsx","webpack://gatsby-starter-default/./src/components/Post/Share.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"names":["size","laptop","tablet","mobile","small","smallest","theme","mainColor","mq","largest","large","width","paragraphMargin","margin","SCategories","styled","SDate","Hr","PostHeadInfoWrapper","Title","props","fontColor","title","date","categories","join","PostHeadWrapper","BackgroundImage","fluid","thumbnail","childImageSharp","alt","MarkdownRenderer","html","dangerouslySetInnerHTML","__html","Utterances","React","repo","containerRef","createRef","themeMode","darkModeVar","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","displayName","direction","SVG","xmlns","height","viewBox","id","data-name","transform","cx","cy","r","fill","x2","stroke","strokeLinecap","strokeWidth","y1","y2","Container","Line","Button","bgColor","NavWrapper","onClick","inputc","body","window","location","href","focus","select","execCommand","parentNode","removeChild","alert","style","display","alignItems","prevProject","flexDirection","nextProject","CommentWrapper","Comment","CommentWidget","data","allMarkdownRemark","edges","node","frontmatter","Template","description","summary","url","image","path"],"mappings":"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","file":"component---src-templates-post-template-tsx-9fc7db29d9f7be5a3a55.js","sourcesContent":["export const size = {\n  laptop: \"75rem\", // 1200px\n  tablet: \"43.75rem\", // 700px\n  mobile: \"90vw\", // 700px\n  small: \"31.25rem\", // 500px\n  smallest: \"25rem\", // 400px\n};\n\nexport const margin = {\n  laptop: \"2.5rem\",\n  tablet: \"2rem\",\n  mobile: \"1.5rem\",\n};\n\nexport const paragraphMargin = {\n  laptop: \"2.5rem\",\n  tablet: \"2rem\",\n  mobile: \"0.5rem\",\n};\n\nexport const lightTheme = {\n  fontColor: \"#1D1D1F\",\n  bgColor: \"#ffffff\",\n  subBgColor: \"#FAFAFA\",\n  btnTextColor: \"#ffffff\",\n  btnBgColor: \"#086BCE\",\n  borderColor: \"solid 1px #EBEBEB\",\n  indexColor: \"#F1F2F4\",\n  postCoverColor: \"#FFFFFF\",\n  commentColor: \"light\",\n};\nexport const darkTheme = {\n  fontColor: \"#ffffff\",\n  bgColor: \"#1D1D1F\",\n  subBgColor: \"#2B2B2B\",\n  btnTextColor: \"#62B1FF\",\n  btnBgColor: \"#203E5C\",\n  borderColor: \"solid 1px #2B2B2B\",\n  indexColor: \"#1D1D1F\",\n  postCoverColor: \"#2B2B2B\",\n  commentColor: \"dark\",\n};\n\nconst theme = {\n  mainColor: \"#0000ff\",\n  mq: {\n    laptop: `@media only screen and (min-width: ${size.largest})`,\n    tablet: `@media only screen and (min-width: ${size.large})`,\n    mobile: `@media only screen and (min-width: ${size.small})`,\n  },\n  width: {\n    laptop: size.laptop,\n    tablet: size.tablet,\n    mobile: size.mobile,\n  },\n  paragraphMargin: {\n    laptop: paragraphMargin.laptop,\n    tablet: paragraphMargin.tablet,\n    mobile: paragraphMargin.mobile,\n  },\n  margin: {\n    laptop: margin.laptop,\n    tablet: margin.tablet,\n    mobile: margin.mobile,\n  },\n};\n\nexport default theme;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\nexport interface PostHeadInfoProps {\n  title: string;\n  date: string;\n  categories: string[];\n}\n\nconst SCategories = styled.div`\n  color: #086bce;\n  font-weight: 600;\n  font-size: 1.125rem;\n  margin-bottom: 1.125rem;\n  @media (max-width: 768px) {\n    font-size: 1rem;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst SDate = styled(SCategories)`\n  color: #a1a1a1;\n  font-weight: 700;\n  margin-top: 1.125rem;\n  margin-bottom: 0px;\n  @media (max-width: 768px) {\n    font-size: 1rem;\n    margin-top: 1rem;\n    margin-bottom: 0;\n  }\n`;\n\nconst Hr = styled.hr`\n  margin-top: 60px;\n  color: #4e5968;\n  @media (max-width: 768px) {\n    margin-top: 40px;\n  }\n`;\n\nconst PostHeadInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 700px;\n  height: 100%;\n  margin: 0 auto;\n  padding: 60px 0;\n  color: #ffffff;\n  position: relative;\n  top: 64px;\n  margin-bottom: 64px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 40px 0;\n  }\n`;\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  overflow-wrap: break-word;\n  text-overflow: ellipsis;\n  white-space: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 3rem;\n  font-weight: 700;\n  color: ${(props) => props.theme.fontColor};\n\n  @media (max-width: 768px) {\n    font-size: 1.875rem;\n  }\n`;\n\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\n  title,\n  date,\n  categories,\n}) {\n  return (\n    <PostHeadInfoWrapper>\n      <SCategories>{categories.join(\" / \")}</SCategories>\n      <Title>{title}</Title>\n      <SDate>업데이트 : {date}</SDate>\n      <Hr />\n    </PostHeadInfoWrapper>\n  );\n};\n\nexport default PostHeadInfo;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\nimport PostHeadInfo, { PostHeadInfoProps } from \"components/Post/PostHeadInfo\";\nimport Img, { FluidObject } from \"gatsby-image\";\n\ntype GatsbyImgProps = {\n  fluid: FluidObject;\n  alt: string;\n  className?: string;\n};\n\nexport interface PostHeadProps extends PostHeadInfoProps {\n  thumbnail: {\n    childImageSharp: {\n      fluid: FluidObject;\n    };\n  };\n}\n\nconst PostHeadWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  @media screen and (max-width: 768px) {\n    width: 92%;\n    align-self: center;\n  }\n`;\n\nconst BackgroundImage = styled((props: GatsbyImgProps) => <Img {...props} />)`\n  width: 700px;\n  height: 400px;\n  object-fit: cover;\n  margin: 0 auto;\n  margin-bottom: 60px;\n  object-position: center center;\n  border-radius: 10px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 240px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  categories,\n  thumbnail: {\n    childImageSharp: { fluid },\n  },\n}) {\n  return (\n    <PostHeadWrapper>\n      <PostHeadInfo title={title} date={date} categories={categories} />\n      <BackgroundImage fluid={fluid} alt=\"thumbnail\" />\n    </PostHeadWrapper>\n  );\n};\n\nexport default PostHead;\n","import React, { FunctionComponent } from \"react\";\nimport styled from \"styled-components\";\n\ninterface PostContentProps {\n  html: string;\n}\n\nconst MarkdownRenderer = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 700px;\n  margin: 0 auto;\n  word-break: break-all;\n\n  // Markdown Style\n  line-height: 1.8125;\n  letter-spacing: -0.02rem;\n  /* word-break: keep-all; */\n  font-weight: 300;\n\n  * {\n    font-size: 1.125rem;\n\n    @media (max-width: 768px) {\n      font-size: 1rem;\n    }\n  }\n  // Adjust Heading Element Style\n\n  p {\n    margin-bottom: 1.5rem; //24ㅔㅌ\n  }\n\n  h1 {\n    font-size: 3rem; //48px\n  }\n\n  h2 {\n    font-size: 1.625rem; //26px\n    margin: 36px 0 32px 0;\n  }\n\n  h3 {\n    font-size: 1.375rem; //22px\n    margin: 20px 0px 20px 0px;\n  }\n\n  strong {\n    color: ${(props) => props.theme.fontColor};\n    font-weight: 600;\n  }\n\n  h1,\n  h2,\n  h3 {\n    color: ${(props) => props.theme.fontColor};\n    font-weight: 600;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n    padding-top: 0;\n  }\n\n  /* * + h1,\n  * + h2,\n  * + h3 {\n    padding-top: 0;\n  } */\n\n  & > h2:first-child {\n    margin-top: 0;\n    padding-top: 0;\n  }\n\n  & > h3:first-child {\n    margin-top: 0;\n    padding-top: 0;\n  }\n\n  img {\n    border-radius: 10px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin-bottom: 1.5rem;\n    padding: 5px 15px;\n    border-left: 2px solid ${(props) => props.theme.fontColor};\n    font-weight: 800;\n  }\n\n  blockquote p {\n    margin-bottom: 0;\n  }\n\n  // Adjust List Element Style\n\n  li p,\n  strong {\n    margin: 0;\n  }\n\n  ol,\n  ul {\n    margin-left: 1.25rem;\n    margin-bottom: 1.5rem;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    margin: 1.375rem 0 2.5rem;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  code,\n  pre {\n    max-width: 92vw;\n    font-weight: 300;\n  }\n\n  pre {\n    margin-bottom: 1.5rem;\n  }\n\n  code * {\n    /* font-family: D2 coding; */\n    /* font-family: SF Mono Light; */\n    /* font-family: \"Roboto Mono\", monospace; */\n    /* font-family: \"Ubuntu\", sans-serif; */\n    font-family: \"Oxygen Mono\", monospace;\n  }\n\n  code {\n    padding: 1px 3px;\n    -webkit-border-radius: 10px;\n    -moz-border-radius: 10px;\n    border-radius: 10px;\n  }\n\n  pre {\n    background-color: #282a36;\n  }\n  pre code {\n    font-size: 0.75rem;\n    padding: 0;\n    background: transparent;\n  }\n\n  code > .parameter {\n    color: #fff;\n  }\n  sup {\n    font-size: 0.75rem;\n    vertical-align: super;\n    line-height: 0;\n  }\n\n  td,\n  th {\n    border-bottom: 1px solid var(--color-gray-3);\n  }\n\n  // Markdown Responsive Design\n  @media (max-width: 768px) {\n    width: 92%;\n    line-height: 1.6;\n    font-size: 0.875rem;\n\n    p {\n      margin-bottom: 1.25rem;\n    }\n\n    h1 {\n      font-size: 1.5rem;\n    }\n\n    h2 {\n      font-size: 1.25rem;\n      margin: 28px 0 12px 0px;\n    }\n\n    h3 {\n      font-size: 1.125rem;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`;\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nexport default PostContent;\n","import React, { createRef, useLayoutEffect } from \"react\";\nimport { darkModeVar } from \"hooks/useTheme\";\n\nconst src = \"https://utteranc.es/client.js\";\nconst LIGHT_THEME = \"github-light\";\nconst DARK_THEME = \"github-dark\";\n\nexport interface IUtterancesProps {\n  repo: string;\n  theme: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo, theme }) => {\n  const containerRef = createRef<HTMLDivElement>();\n  const themeMode = darkModeVar() === false ? LIGHT_THEME : DARK_THEME;\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement(\"script\");\n\n    const attributes = {\n      src,\n      repo,\n      theme: themeMode,\n      \"issue-term\": \"pathname\",\n      label: \"✨💬 comments ✨\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    containerRef.current!.appendChild(utterances);\n  }, [repo]);\n\n  return <div ref={containerRef} />;\n});\n\nUtterances.displayName = \"Utterances\";\n\nexport default Utterances;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Arrow = ({ direction }) => {\n  const SVG = styled.svg`\n    margin: 20px;\n    transform: rotate(${direction});\n  `;\n  return (\n    <SVG\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"32\"\n      height=\"32\"\n      viewBox=\"0 0 32 32\"\n    >\n      <g id=\"그룹_105\" data-name=\"그룹 105\" transform=\"translate(-630 -4357)\">\n        <circle\n          id=\"타원_1\"\n          data-name=\"타원 1\"\n          cx=\"16\"\n          cy=\"16\"\n          r=\"16\"\n          transform=\"translate(630 4357)\"\n          fill=\"#fff\"\n        />\n        <line\n          id=\"선_6\"\n          data-name=\"선 6\"\n          x2=\"14\"\n          transform=\"translate(639 4373.5)\"\n          fill=\"none\"\n          stroke=\"#4a4a4a\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"2\"\n        />\n        <line\n          id=\"선_7\"\n          data-name=\"선 7\"\n          y1=\"5\"\n          x2=\"5.5\"\n          transform=\"translate(639 4368.5)\"\n          fill=\"none\"\n          stroke=\"#4a4a4a\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"2\"\n        />\n        <line\n          id=\"선_8\"\n          data-name=\"선 8\"\n          x2=\"5.5\"\n          y2=\"5\"\n          transform=\"translate(639 4373.5)\"\n          fill=\"none\"\n          stroke=\"#4a4a4a\"\n          strokeLinecap=\"round\"\n          strokeWidth=\"2\"\n        />\n      </g>\n    </SVG>\n  );\n};\n\nexport default Arrow;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Arrow from \"./Arrow\";\nimport theme from \"components/Common/Theme\";\n\nconst Black = \"#4A4A4A\";\nconst Blue = \"#4080FF\";\n\nconst Container = styled.div`\n  width: 700px;\n  align-self: center;\n  margin-top: 62px;\n  margin-bottom: 40px;\n\n  & h3 {\n    font-size: 1.5rem;\n    line-height: 2.25rem;\n    font-weight: 600;\n    color: #1d1d1d;\n  }\n  @media (max-width: 768px) {\n    width: 92%;\n  }\n`;\n\nconst Line = styled.hr`\n  margin-bottom: ${theme.margin.laptop};\n`;\n\nconst Button = styled.button`\n  width: 6.375rem;\n  height: 2rem;\n  border-radius: 10px;\n  background-color: ${(props) => props.bgColor};\n  border: none;\n  color: white;\n  font-size: 0.75rem;\n  margin-right: 1rem;\n  margin-top: 1.25rem;\n  margin-bottom: ${theme.margin.laptop};\n  transition: all 0.1s ease-in-out;\n  &:hover {\n    transition: all 0.1s ease-in-out;\n    transform: scale(1.02);\n  }\n`;\n\nconst NavWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  & h4 {\n    font-size: 0.75rem;\n    line-height: 1.5;\n    color: #1d1d1d;\n    font-weight: 500;\n  }\n  & p {\n    font-weight: 500;\n  }\n  & div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 330px;\n    height: 84px;\n    border-radius: 10px;\n    background-color: #f1f2f4;\n    transition: all 0.1s ease-in-out;\n    &:hover {\n      transition: all 0.1s ease-in-out;\n      transform: scale(1.02);\n    }\n  }\n  & div:last-child {\n    align-items: flex-end;\n    text-align: right;\n  }\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    & div {\n      width: ${theme.width.mobile};\n      height: 100px;\n      margin-bottom: ${theme.margin.mobile};\n    }\n\n    & div:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nconst Share = (props) => {\n  const copyToClipboard = () => {\n    let inputc = document.body.appendChild(document.createElement(\"input\"));\n    inputc.value = window.location.href;\n    inputc.focus();\n    inputc.select();\n    document.execCommand(\"copy\");\n    inputc.parentNode.removeChild(inputc);\n    alert(\"URL Copied.\");\n  };\n  return (\n    <Container>\n      <h3>🚀 공유하기!</h3>\n      <div>\n        <Button onClick={copyToClipboard} bgColor={Black}>\n          Copy Link\n        </Button>\n        <Button bgColor={Blue}>Facebook</Button>\n      </div>\n      <Line />\n      <NavWrapper>\n        <div>\n          <span\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              width: \"100%\",\n            }}\n          >\n            <Arrow direction=\"\" />\n            <span>\n              <h4>이전 게시글</h4>\n              <p>{props.prevProject}</p>\n            </span>\n          </span>\n        </div>\n        <div>\n          <span\n            style={{\n              display: \"flex\",\n              flexDirection: \"row-reverse\",\n              alignItems: \"center\",\n              width: \"100%\",\n            }}\n          >\n            <Arrow direction=\"180deg\" />\n            <span>\n              <h4>다음 게시글</h4>\n              <p>{props.nextProject}</p>\n            </span>\n          </span>\n        </div>\n      </NavWrapper>\n    </Container>\n  );\n};\n\nexport default Share;\n","import React, { FunctionComponent } from \"react\";\nimport { graphql } from \"gatsby\";\nimport Template from \"components/Common/Template\";\nimport PostHead, { PostHeadProps } from \"components/Post/PostHead\";\nimport PostContent from \"components/Post/PostContent\";\nimport CommentWidget from \"components/Post/CommentWidget\";\nimport Share from \"components/Post/Share\";\nimport styled from \"styled-components\";\nimport { darkModeVar } from \"hooks/useTheme\";\nimport { useState } from \"react\";\n\ninterface PostTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: {\n            html: string;\n            frontmatter: PostHeadProps & {\n              summary: string;\n              title: string;\n              path: string;\n            };\n          };\n        }\n      ];\n    };\n  };\n}\n\nconst CommentWrapper = styled.div`\n  width: 708px;\n  align-self: center;\n  @media (max-width: 768px) {\n    width: 92%;\n  }\n`;\n\nconst Comment = styled(CommentWidget)`\n  & > iframe {\n    width: 100px;\n  }\n`;\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) {\n  const {\n    node: { html, frontmatter },\n  } = edges[0];\n\n  return (\n    <Template\n      title={`[${frontmatter.categories}] ` + frontmatter.title + \"- B-log\"}\n      description={frontmatter.summary}\n      url=\"\"\n      image=\"\"\n    >\n      <PostHead {...frontmatter} />\n      <PostContent html={html} />\n      <Share nextProject={frontmatter.path} prevProject=\"ageasda\" />\n      <CommentWrapper>\n        <Comment repo=\"k1a11220/blog\" />\n      </CommentWrapper>\n    </Template>\n  );\n};\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                fluid(fit: INSIDE, quality: 100) {\n                  ...GatsbyImageSharpFluid_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}